FROM node:lts-alpine as frontend-build

RUN npm i -g pnpm

WORKDIR /app
COPY frontend/package.json frontend/pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

COPY frontend .
COPY .env.prod ./.env
RUN pnpm run build

FROM alpine:latest

ARG CUSTOM_DOMAIN

RUN apk add --update --no-cache build-base git pcre-dev openssl openssl-dev zlib-dev linux-headers gettext \
    && wget https://nginx.org/download/nginx-1.23.3.tar.gz \
    && tar zxf nginx-1.23.3.tar.gz \
    && git clone https://github.com/google/ngx_brotli.git --recursive \
    && cd ../nginx-1.23.3 \
    && ./configure \
        --with-compat \
        --with-http_ssl_module \
        --with-http_v2_module \
        --prefix=/usr/share/nginx \
        --sbin-path=/usr/local/sbin/nginx \
        --conf-path=/etc/nginx/nginx.conf \
        --pid-path=/run \
        --add-dynamic-module=../ngx_brotli \
    && make modules \
    && make install \
    && openssl req -x509 -nodes \
        -days 365 \
        -subj "/C=CA/ST=QC/O=Company, Inc./CN=*.${CUSTOM_DOMAIN}" \
        -addext "subjectAltName=DNS:*.${CUSTOM_DOMAIN}" \
        -newkey rsa:2048 \
        -keyout /etc/ssl/private/nginx-selfsigned.key \
        -out /etc/ssl/certs/nginx-selfsigned.crt

COPY --from=frontend-build /app/dist /usr/share/nginx/html

COPY nginx/prod.conf.template  /tmp/nginx.conf.template

RUN export CUSTOM_DOMAIN=${CUSTOM_DOMAIN} \
    && envsubst < "/tmp/nginx.conf.template" > "/etc/nginx/nginx.conf"

CMD ["nginx", "-g", "daemon off;"]
